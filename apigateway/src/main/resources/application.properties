# The port on which the API Gateway service will run
server.port=8080

# The URL of the Eureka Discovery Server where the gateway will register itself
# and discover other services. This assumes Eureka is running on its default port.
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# The name of this application, which it will use to register itself with Eureka.
spring.application.name=apigateway

# A key feature of the gateway. Enabling this tells the gateway to automatically
# create routes for all services discovered via Eureka, using their service name
# as the route ID.
spring.cloud.gateway.discovery.locator.enabled=true

# The gateway's routing rules. We are creating a single rule (index 0).
# The ID is a unique name for this route.
spring.cloud.gateway.routes[0].id=chatbot_route
# The target URI for this route. 'lb://' means load-balanced, and 'chatbotservice'
# is the name of the service registered in Eureka that the request will be forwarded to.
spring.cloud.gateway.routes[0].uri=lb://chatbotservice
# The condition that must be met for this route to be triggered. Any request with a path
# starting with '/api/chatbot/' will be routed to the chatbot-service.
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/chatbot/**


# Another routing rule (index 1) for the Jira Integration Service.
# Requests with a path starting with '/api/jira/' will be routed to the 'jiraintegratorservice'.
spring.cloud.gateway.routes[1].id=jiraintegratorservice
spring.cloud.gateway.routes[1].uri=lb://jiraintegratorservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/jira/**



# Another routing rule (index 1) for the NLP Service.
# Requests with a path starting with '/api/nlp/' will be routed to the 'nlpservice'.
spring.cloud.gateway.routes[2].id=nlpservice
spring.cloud.gateway.routes[2].uri=lb://nlpservice
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/nlp/**